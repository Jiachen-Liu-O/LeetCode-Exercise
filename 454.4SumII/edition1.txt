import java.util.*;
class Solution {
    public int fourSumCount(int[] A, int[] B, int[] C, int[] D) {
        HashMap<Integer,Integer> a = new HashMap<>();
        HashMap<Integer,Integer> b = new HashMap<>();
        int sum=0;
        int l=A.length;


//遍历A,B，将AB所有组合的和的值为键，相同和的值出现次数位值存入hashmap
        for(int i=0;i<l;i++){
            for(int j=0;j<l;j++){
                if(!a.containsKey(A[i]+B[j])){
                    a.put((A[i]+B[j]),1);
                }
                else{
                    a.put((A[i]+B[j]),(a.get(A[i]+B[j])+1));
                }
                
            }
        }
        

//Traverse CandD,if in there is a key equals to 0-(C+D) in HashMap a, sum=sum+a.(0-(C+D))
        for(int i=0;i<l;i++){
            for(int j=0;j<l;j++){
                if(a.containsKey(0-C[i]-D[j])){
                    sum=sum+a.get(0-C[i]-D[j]);
                }
                
            }
        }
        
        return sum;
        
    }
    
    
}